#!/bin/bash
# Copyright 2011, Dell
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

### BEGIN INIT INFO
# Provides:               rebar_join.sh
# Required-Start:         sshd
# Required-Stop:
# Default-Start:          2 3 4 5
# Default-Stop:
# Short-Description:      Rebar Join Script
#### END INIT INFO

# Spin while we wait for the interface to come up.
set -x
export PS4='${BASH_SOURCE}@${LINENO}(${FUNCNAME[0]}): '

echo "Waiting on our network interface to come up..."
while ! ip addr | grep -v " lo" | grep -q "inet "
do
  sleep 1
done

if [[ -f /etc/rebar.install.key ]]; then
    export REBAR_KEY="$(cat /etc/rebar.install.key)"
fi

[[ -x /bin/rebar ]] || (
    cd /bin
    curl -fgl -O "<%=@provisioner_web%>/files/rebar"
    chmod 755 rebar
)
export REBAR_ENDPOINT="<%=@api_server%>"


put_alive() {
    echo "Setting node alive=$1"
    HOSTNAME=$(hostname -f)
    rebar nodes update "$HOSTNAME" "{\"alive\": $1, \"bootenv\": \"local\"}"
    while [[ $(rebar nodes get "$HOSTNAME" attrib provisioner-active-bootstate |jq -r '.value') != local ]]; do
        sleep 1
    done
}

# Force time (some OS already have this done)
ntpdate <%=@ntp_server%> 2>/dev/null >/dev/null

case $1 in
    stop) put_alive false;;
    status) echo "OK";;
    start) put_alive false; put_alive true ;;
    *) echo "Unknown action to rebar_join.sh."
        exit 1;;
esac
