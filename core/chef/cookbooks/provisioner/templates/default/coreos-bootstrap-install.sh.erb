#!/bin/bash

export REBAR_ENDPOINT="<%=@api_server%>"
curl -O <%=@web_path%>/cloud-config.yaml
(cd /bin; curl -fgl -O "<%=@provisioner_web%>/files/rebar"; chmod 755 rebar)
sudo http_proxy="<%=@proxy%>" coreos-install -d /dev/<%= @rootdev %> -c cloud-config.yaml

sudo mount -o subvol=root /dev/<%= @rootdev %>-part9 /mnt/

key_re='rebar\.install\.key=([^ ]+)'
if [[ $(cat /proc/cmdline) =~ $key_re ]]; then
   export REBAR_KEY="${BASH_REMATCH[1]}"
   echo "$REBAR_KEY" >/mnt/etc/rebar.install.key
elif [[ -f /etc/rebar.install.key ]]; then
    export REBAR_KEY="$(cat /etc/rebar.install.key)"
fi

# Setup root keys the same as core keys
sudo mkdir -p /mnt/root/.ssh
sudo chmod 700 /mnt/root/.ssh
cat > /mnt/root/.ssh/authorized_keys <<EOF
<% @keys.each do |key| -%>
<%=key%>
<% end -%>
EOF
sudo chmod 600 /mnt/root/.ssh/authorized_keys

# Add rebar join startup scripts
sudo mkdir -p /mnt/opt/digitalrebar/bin
sudo curl -s -f -L -o /mnt/opt/digitalrebar/bin/rebar_join.sh "<%=@provisioner_web%>/nodes/$HOSTNAME/rebar_join.sh"
sudo chmod +x /mnt/opt/digitalrebar/bin/rebar_join.sh

# Make sure the ssh script jig will work correctly.
sudo echo "AcceptEnv http_proxy https_proxy no_proxy PATH" >> /mnt/etc/ssh/sshd_config
sudo echo "PermitUserEnvironment yes" >> /mnt/etc/ssh/sshd_config
sudo chmod 600 /mnt/etc/ssh/sshd_config

sudo echo "PATH=/usr/bin:/bin:/usr/sbin:/sbin:/opt/bin:/opt/chef/bin:/opt/digitalrebar/core/bin" >> /mnt/root/.ssh/environment
sudo chmod 600 /mnt/root/.ssh/environment

sudo umount /mnt

HOSTNAME=$(hostname -f)
rebar nodes update "$HOSTNAME" '{"bootenv": "local"}'
# Wait until the provisioner has noticed our state change
while [[ $(rebar nodes get "$HOSTNAME" attrib provisioner-active-bootstate |jq -r '.value') != local ]]; do
    sleep 1
done

sudo reboot
