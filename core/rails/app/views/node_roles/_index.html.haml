- if list.length==0
  %p= t 'no_items'
- else
  %table.data.box
    %thead
      %tr
        %th= t '.deployment'
        %th= t '.node'
        %th= t '.role'
        %th= t '.jig'
        %th
        %th= t '.state'
        - if list.first.state == NodeRole::ERROR
          %th= t '.action'
    %tbody
      - list.each do |nr|
        %tr.node{ :class => cycle(:odd, :even) }
          - working = true
          - node_led = 'on'
          - n_avail = nr.node_available rescue nr.node.available
          - n_alive = nr.node_alive rescue nr.node.alive
          - d_name = nr.deployment_name rescue nr.deployment.name
          - n_name = nr.node_name rescue nr.node.name
          - role_name = nr.role_name rescue nr.role.name
          - role_jig_name = nr.role_jig_name rescue nr.role.jig_name
          - if !n_avail
            - node_led = (n_alive ? 'reserved' : 'idle')
            - working = false
          - elsif !n_alive
            - node_led = 'off'
            - working = false
          - nr_led = NodeRole::STATES[nr.state || NodeRole::ERROR]
          - nr_led = "wait" if !working and nr.state == NodeRole::TODO 
          %td= link_to d_name, deployment_path(:id=>nr.deployment_id) rescue t 'unknown'
          %td          
            = link_to n_name, node_path(:id=>nr.node_id) rescue t 'unknown'
            - unless working
              = image_tag "icons/led/#{node_led}.png", {title: t(node_led, scope: "common.state")}
          %td= link_to role_name, role_path(:id=>nr.role_id) rescue t 'unknown'
          %td= link_to role_jig_name, jig_path(:id=>role_jig_name) rescue t 'unknown'
          %td
            .led{:class => nr_led, :title=>nr.state_name}
          %td= link_to nr.state_name, node_role_path(nr.id)
          - if nr.state == NodeRole::ERROR
            %td= link_to t('.retry'), "/api/v2/node_roles/#{nr.id}/retry", :class => 'button', :method=>:put, :'data-remote' => true

