# Copyright 2013, Dell
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

barclamp:
  name: ipmi
  display: IPMI
  version: "2.E"
  license: "apache2"
  copyright: "Dell, Inc 2013"
  api_version: "v2"
  api_version_accepts: "v2"
  requires:
    - chef
    - network
  member:
    - rebar

rebar:
  layout: 2.0

hammers:
  - name: ipmi
    priority: 6
    type: 'BarclampIpmi::IpmiHammer'
  - name: wsman
    priority: 2
    type: 'BarclampIpmi::WsmanHammer'
  - name: amt
    priority: 2
    type: 'BarclampIpmi::AmtHammer'

roles:
  - name: amt-discover
    jig: script
    type: 'BarclampIpmi::AmtDiscover'
    events:
      - endpoint: inproc://role:amt-discover/on_active
        selectors:
          - event: on_active
            obj_class: role
            obj_id: amt-discover
    flags:
      - implicit
      - discovery
    attribs:
      - name: amt-enable
        description: "Whether to try to enable Intel AMT support on the system"
        map: 'amt/enable'
        default: false
        schema:
          type: bool
    wants-attribs:
      - enable-amt-subsystem
  - name: amt-configure
    jig: role-provided
    type: 'BarclampIpmi::AmtConfigure'
    requires:
      - amt-discover
      - rebar-managed-node
    preceeds:
      - rebar-hardware-configured
    wants-attribs:
      - enable-amt-subsystem
      - node-control-address
      - amt-enable
    attribs:
      - name: amt-password
        description: 'The password for the AMT controller'
        map: 'amt/password'
        default: 'Rebar_1!'
        schema:
          type: str
  - name: ipmi-discover
    jig: chef
    description: "Discover and inventory the local IPMI controller"
    documentation: |
      ipmi-discover is responsible for discovering and inventorying the local
      IPMI controller for the system if one is present.  It tries to gather
      information about the IPMI controller using ipmitool in-band communication, which
      sidesteps the whole question about how you perform out-of-band discovery and
      trying to guess the appropriate default usernames and passwords.

      If we discover an IPMI controller, we perform a basic inventory of it and determine
      what (if any) quirks the IPMI controller has (such as requiring a delay between commands,
      whether one of the users is immutable, whether the channels used for network config
      are messed up (and how), etc).
    preceeds:
      - rebar-managed-node
    requires:
      - deployer-client
    flags:
      - implicit
      - discovery
    events:
      - endpoint: inproc://role:ipmi-discover/on_active
        selectors:
          - event: on_active
            obj_class: role
            obj_id: ipmi-discover
    attribs:
      - name: ipmi-enable
        description: "Says whether to try and enable IPMI for this node"
        map: 'ipmi/bmc_enable'
        default: true
        schema:
          type: bool
      - name: ipmi-detected-params
        description: "The firmware and network settings that IPMI is configured with."
        map: 'rebar_wall/ipmi'
      - name: ipmi-version
        description: "The version of IPMI that this controller implements"
        map: 'rebar_wall/ipmi/bmcinfo/version'
      - name: ipmi-device-id
        description: "The device ID of the IPMI controller"
        map: 'rebar_wall/ipmi/bmcinfo/device_id'
      - name: ipmi-device-rev
        description: "The device revision of the IPMI controller"
        map: 'rebar_wall/ipmi/bmcinfo/device_rev'
      - name: ipmi-firmware-rev
        description: "The firmware revision the IPMI controller is at"
        map: 'rebar_wall/ipmi/bmcinfo/firmware_rev'
      - name: ipmi-mfgr-id
        description: "The manufacturer ID of the IPMI controller"
        map: 'rebar_wall/ipmi/bmcinfo/mfgr_id'
      - name: ipmi-mfgr-name
        description: "The manufacturer of the IPMI controller"
        map: 'rebar_wall/ipmi/bmcinfo/mfgr_name'
      - name: ipmi-product-id
        description: "The product ID of the IPMI controller"
        map: 'rebar_wall/ipmi/bmcinfo/product_id'
      - name: ipmi-product-name
        description: "The product name of the IPMI controller"
        map: 'rebar_wall/ipmi/bmcinfo/product_name'
      - name: ipmi-provides-device-sdrs
        description: "Whether this IPMI controller provides access to additional devices"
        map: 'rebar_wall/ipmi/bmcinfo/provides_device_sdrs'
      - name: ipmi-additional-devices
        description: "The additional devices this IPMI controller provides"
        map: 'rebar_wall/ipmi/bmcinfo/additional_devs'
      - name: ipmi-macaddr
        description: "The MAC address of this IPMI controller"
        map: 'rebar_wall/ipmi/laninfo/macaddr'
      - name: ipmi-quirklist
        description: 'List of interesting quirks to use when talking to IPMI controllers'
        documentation: |
          IPMI controllers tend to have interesting and widely-spread bugs in their implementation.
          ipmi-quirklist is a compilation of ones we have encountered in the wild.  Each
          quirk represents a special-case that the ipmi-configure code must take into account
          when configuring the IPMI controller to ensure that we wind up with an operational
          and properly configured IPMI controller.  The quirks we have cataloged are as follows:

          * "ipmi-nodelay" indicates that you do not have to sleep for a certain amount of
            time in between ipmitool invocations.  That this is a quirk instead of the default
            says volumes in and of itself about BMC firmware quality in general.
          * "ipmi-dell-dedicated-nic" indicates that a Dell-specific ipmitool command should
            be used to flip the IPMI controller between using its own dedicated nic and piggybacking
            on the internal nics.
          * "ipmi-crossed-access-channels" indicates that the channels used to configure the LAN
            controller are miswired, and that certian channel-control settings should be modified
            accrodingly.
          * "ipmi-hard-reset-after-config" indicates that the IPMI controller must be hard
            reset after issuing configuration settings before the new settings are actually
            applied.
          * "ipmi-immutable-rootname" indicates that the preconfigured admin user in slot 2
            cannot have its name changed.
          * "ipmi-immutable-root" indicates that the preconifgured admin user in slot 2 cannot
            be changed at all, and we must create the user that Rebar will access the controller
            remotely with in slot 3 instead.
        map: 'ipmi/quirks'
        default:
          "dell-rseries":
            "quirklist": ["ipmi-nodelay","ipmi-dell-dedicated-nic"]
            "match":
              "bmcinfo":
                "device_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "32"
                "mfgr_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "674"
                  "score": 5
                "product_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "256 (0x0100)"
                  "score": 3
          "hp-19-11-bmc":
            "quirklist": ["ipmi-crossed-access-channels","ipmi-hard-reset-after-config"]
            "match":
              "bmcinfo":
                "device_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "19"
                "mfgr_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "11"
                  "score": 5
          "intel-33-343-bmc":
            "quirklist": ["ipmi-immutable-rootname"]
            "match":
              "bmcinfo":
                "device_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "33"
                "mfgr_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "343"
                  "score": 5
          "ibm-2-220-bmc":
            "quirklist": ["ipmi-immutable-root"]
            "match":
              "bmcinfo":
                "device_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "32"
                "mfgr_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "2"
                  "score": 5
                "product_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "220 (0x00dc)"
                  "score": 3
          "ibm-2-291-bmc":
            "quirklist": ["ipmi-immutable-root"]
            "match":
              "bmcinfo":
                "device_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "32"
                "mfgr_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "2"
                  "score": 5
                "product_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "291 (0x0123)"
                  "score": 3
          "ibm-2-other-bmc":
            "quirklist": ["ipmi-immutable-root"]
            "match":
              "bmcinfo":
                "device_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "32"
                "mfgr_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "2"
                  "score": 6
          "super-micro-bmc":
            "quirklist": ["ipmi-immutable-root"]
            "match":
              "bmcinfo":
                "device_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "32"
                "mfgr_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "47488"
                  "score": 5
          "super-micro-redfish-bmc":
            "quirklist": ["ipmi-immutable-root"]
            "match":
              "bmcinfo":
                "device_id":
                  "__sm_leaf": true
                  "match": "32"
                  "op": "=="
                "mfgr_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "10876"
                  "score": 5
                "product_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "2084 (0x0824)"
                  "score": 5
          "quanta-bmc":
            "quirklist": ["ipmi-immutable-root"]
            "match":
              "bmcinfo":
                "device_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "32"
                "mfgr_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "7244"
                  "score": 5
          "ibm-20301-bmc":
            "quirklist": ["ipmi-immutable-root"]
            "match":
              "bmcinfo":
                "device_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "32"
                "mfgr_id":
                  "__sm_leaf": true
                  "op": "=="
                  "match": "20301"
                  "score": 5
        schema:
          type: map
          mapping:
            =:
              type: map
              mapping:
                "match": { type: any, required: true }
                "quirklist":
                  type: seq
                  sequence:
                    - type: str
                      enum:
                        - ipmi-nodelay
                        - ipmi-dell-dedicated-nic
                        - ipmi-crossed-access-channels
                        - ipmi-immutable-rootname
                        - ipmi-immutable-root
                        - ipmi-hard-reset-after-config
    wants-attribs:
      - enable-ipmi-subsystem
  - name: ipmi-configure
    jig: chef
    description: 'Allow Rebar to control the node via IPMI'
    documentation: |
      ipmi-configure is responsible granting admin rights to the user that Rebar will
      use to access the node.  It will reset the user in siot 2 (or 3 if the IPMI controller
      has the ipmi-immutable-root quirk) to have the username and password specified
      by the ipmi-username and ipmi-password attribs and give that user admin rights
      when accessed over the lan.  It will also configure the LAN interface for the IPMI
      controller if desired.
    requires:
      - firmware-flash
      - rebar-managed-node
    wants-attribs:
      - enable-ipmi-subsystem
      - ipmi-enable
      - ipmi-detected-params
      - ipmi-shared
    preceeds:
      - rebar-hardware-configured
      - bios-dell-rseries-configure
      - bios-supermicro-configure
    events:
      - endpoint: inproc://role:ipmi-configure/on_active
        selectors:
          - event: on_active
            obj_class: role
            obj_id: ipmi-configure
    attribs:
      - name: ipmi-username
        description: "The username that will be used to access the IPMI controller remotely."
        map: 'ipmi/bmc_user'
        default: "root"
        schema:
          type: str
          required: true
      - name: ipmi-password
        description: "The password for the IPMI user."
        map: 'ipmi/bmc_password'
        default: 'cr0wBar!'
        schema:
          type: str
          required: true
      - name: ipmi-configure-networking
        description: "Whether to configure IPMI networking or leave it alone"
        map: 'ipmi/configure_networking'
        default: true
        schema:
          type: bool
      - name: ipmi-use-dhcp
        description: "Whether the IPMI controller should get its address via DHCP"
        map: 'ipmi/use_dhcp'
        default: false
        schema:
          type: bool
      - name: ipmi-configured
        description: "Whether the username and password has been configured for this IPMI controller"
        map: 'ipmi/configured'
      - name: ipmi-messages
        description: 'Messages from configuring IPMI on the system'
        map: 'rebar_wall/status/ipmi/messages'
        default: []
      - name: ipmi-address
        description: "The address of the IPMI controller as detected at the end of configuration"
        map: 'rebar_wall/ipmi/laninfo/ipaddr'
    flags:
      - implicit

debs:
  required_pkgs:
    - ipmitool

rpms:
  centos-6.5:
    required_pkgs:
      - libwsman1
      - libwsman-devel
  centos-6.6:
    required_pkgs:
      - libwsman1
      - libwsman-devel

extra_files:
  # Utility for configuring Dell-specific BMC settings on PEC gear.
  - http://poweredgec.com/files/bmc-2013-10-22.tgz

attribs:
  - name: ipmi-shared
    map: 'ipmi/shared_port'
    description: 'Value to use as the IPMI Port for Dell systems'
    default: 'dedicated'
    schema:
      type: str
      required: true
  - name: ipmi-wanted-version
    map: 'ipmi/wanted-version'
    description: 'The desired version of the IPMI subsystem.'
    default: "latest"
    schema:
      type: str
      required: true
  - name: ipmi-firmware-history
    map: 'ipmi/firmware_history'
    description: "IPMI update history of applied updates"

