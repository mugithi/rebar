# Copyright 2013, Dell
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

barclamp:
  name: "chef"
  parent: "core"
  description: "Chef CMDB & DevOps Framework"
  display: "Chef"
  version: "2.E"
  source_url: "https://github.com/digitalrebar/core"
  license: "Apache 2"
  license_url: "https://github.com/digitalrebar/core/blob/develop/doc/licenses/README.md"


roles:
  - name: chef-service
    jig: role-provided
    icon: local_pizza
    description: 'Provides a chef service.'
    flags:
      - service
    attribs:
      - name: chef-servers
        description: 'URLs that clients should use to talk to the chef server'
        map: 'chefjig/server/urls'
        schema:
          type: seq
          sequence:
            - type: str
              pattern: '/\Ahttps:\/\/.+\z/'
      - name: chef-servers-admin-key
        description: 'Admin key used to access chef server'
        map: 'chefjig/server/key'
        schema:
          type: seq
          sequence:
            - type: str
      - name: chef-servers-admin-name
        description: 'Admin user used to access chef server'
        map: 'chefjig/server/username'
        schema:
          type: seq
          sequence:
            - type: str
      - name: chef-client-sources
        description: 'The URL that systems should use to download the Chef client'
        map: 'chefjig/client_download/sources'
        schema:
          type: map
          mapping:
            =:
              type: map
              mapping:
                source:
                  type: str
                  required: true
                sha256:
                  type: str
                  required: true
        default:
          centos:
            source: 'https://packages.chef.io/files/stable/chef/12.18.31/el/6/chef-12.18.31-1.el6.x86_64.rpm'
            sha256: 'd97c3a2279366816cfbdb22916d0952b9da1627a1653b42d3ef71022619473e4'
          ubuntu:
            source: 'https://packages.chef.io/files/stable/chef/12.18.31/ubuntu/12.04/chef_12.18.31-1_amd64.deb'
            sha256: '4fdabf0ae37c999795bef5e97133c1b78182129edec28c17ccf9ca6661dcc754'
          debian:
            source: 'https://packages.chef.io/files/stable/chef/12.18.31/debian/6/chef_12.18.31-1_amd64.deb'
            sha256: '256cfc4f3a567967bbe6c3712c8708298e76aaf6fcccecfdaf4e46eb47b01310'
  - name: chef-client
    jig: script
    description: 'Provides a chef client.'
    preceeds:
      # Let chef-client provide ohai of we will use it
      - rebar-inventory
    requires:
      - chef-service
      - proxy-client
    flags:
      - implicit
    events:
      - endpoint: inproc://role:chef-client/on_node_delete
        selectors:
          - event: on_node_delete
            obj_class: role
            obj_id: chef-client
      - endpoint: inproc://role:chef-client/sync_on_todo
        selectors:
          - event: sync_on_todo
            obj_class: role
            obj_id: chef-client
    wants-attribs:
      - chef-servers
      - provisioner-webservers
      - chef-client-sources
  - name: chef-solo
    jig: script
    description: 'Configures chef-solo for a node.'
    flags:
      - implicit
    attribs:
      - name: chef-solo_client_name
        description: 'The client name that chef-solo should use'
        map: 'rebar/chef-solo/name'

attribs:
  - name: chef-client_name
    description: 'The name that this node should use for its chef client.'
    map: 'chefjig/client/name'
  - name: chef-client_key
    description: 'The private key that this node should use to authenticate with the chef server'
    map: 'chefjig/client/key'
    ui_renderer: 'barclamp_chef/attribs/client_key'
      
